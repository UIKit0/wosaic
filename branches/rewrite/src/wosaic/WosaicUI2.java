/**
 * 
 */
package wosaic;

import java.awt.Panel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JRadioButton;

import wosaic.ui.MosaicPane;

/**
 * The new interface for Wosaic.  This revision will be an almost complete
 * rewrite to better abstract the creation process and keep track of
 * where are memory is being used.
 */
public class WosaicUI2 extends Panel implements ActionListener {

	/**
	 * The lower pane, where we actually display the generated mosaic.
	 * We use the same MosaicPane for the duration of the session, but the
	 * tile grid gets reinitialized each mosaic.
	 */
	protected MosaicPane MosaicDisplay = null;
	
	/**
	 * The second tab in our UI, responsible to letting the users set
	 * extra options for the Mosaic creation.  This is created at runtime
	 * and persists throughout the session.
	 */
	protected JPanel AdvancedOptionsTab = null;
	
	/**
	 * The primary "tab" in our interface.  Holds the general configuration
	 * options, and will display the Mosaic when it's created.  This is
	 * created at runtime and persists throughout the session.
	 */
	protected JPanel MainTab = null;
	
	/**
	 * Button that spawns the File Chooser allowing the user to select a 
	 * source picture.  This gets created with the MainTab at runtime.
	 */
	protected JButton BrowseButton = null;
	
	/**
	 * Button that begins the process of saving the completed mosaic.
	 * Only enabled when there has been a mosaic actually created.  This
	 * gets created with the MainTab at runtime.
	 */
	protected JButton SaveButton = null;
	
	/**
	 * The "Controller" that is responsible for delegating tasks and spawning
	 * threads for the creation of a mosaic.  This gets initialized at "generation
	 * time", and is destroyed promptly after the mosaic is complete.  This should
	 * help us keep hold of our memory.
	 */
	protected Controller MosaicController = null;
	
	/**
	 * Radio button allowing the user to opt to entering their own custom dimensions
	 * for the saved mosaic output.  Although this is created and adjustable at
	 * runtime, it has no effect until saving the mosaic.
	 */
	protected JRadioButton CustomDimsButton = null;
	
	/**
	 * Generated by Eclipse
	 */
	private static final long serialVersionUID = -3633641341230537673L;

	/**
	 * Handle events from various sources by passing evaluation
	 * off to the appropriate method.
	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
	 */
	public void actionPerformed(ActionEvent arg0) {
		// TODO Auto-generated method stub

	}

}
